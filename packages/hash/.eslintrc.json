{
  "root": true, // this is the highest config lower ones will automatically extend
  "parser": "@typescript-eslint/parser",
  "plugins": ["@typescript-eslint", "react-hooks", "jest"],
  "extends": [
    "plugin:@typescript-eslint/base",
    "airbnb",
    "prettier" // mutes eslint rules conflicting w/ prettier (requires eslint-config-prettier)
  ],
  "ignorePatterns": ["**/*.gen.*"],
  "globals": {
    "NodeJS": true,
    "React": true,
    "JSX": true
  },
  "env": {
    "browser": true,
    "node": true
  },
  "rules": {
    // /frontend/.eslintrc.json
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": [
      "warn",
      {
        "additionalHooks": "(^useModal$)|(^useUserGatedEffect$)"
      }
    ],
    "react/jsx-key": "error",
    "react/jsx-no-useless-fragment": "error",
    "react/self-closing-comp": "warn",
    "no-restricted-imports": ["error", {
      "paths": [{
        "name": "@testing-library/react",
        "importNames": ["render"],
        "message": "Please use ./src/tests/testUtils.tsx#render instead"
      }]
    }],
    // modified airbnb rules
    "no-underscore-dangle": "off",
    "no-nested-ternary":"off",
    "no-restricted-syntax": "off",
    "camelcase": "off", 
    "import/no-cycle": "warn",
    "import/prefer-default-export": "off",
    "no-await-in-loop": "off",
    "import/no-unresolved": [2, { "ignore": ["^@hashintel"] }], 
    "react/react-in-jsx-scope": "off",
    "react/prop-types": "off", // because we are using typescript this is redundant
    "jsx-a11y/anchor-is-valid": "off", // because we use next.js empty anchor tags should be used when using the Link component
    "react/jsx-filename-extension": [2, { "extensions": [".js", ".jsx", ".ts", ".tsx"] }],
    "react/jsx-props-no-spreading": "off",
    "no-void":  ["error", { "allowAsStatement": true }],
    // potential airbnb rule additions
    // "no-unused-vars": "off",
    // "no-console": "warn",
    // "no-plusplus": "off",
    // "default-case": "off",
    "eqeqeq": [
      "error",
      "always",
      {
        "null": "ignore"
      }
    ],
    "id-length": [
      "error",
      {
        "min": 2,
        "exceptions": ["_", "x", "y", "z", "a", "b", "i"],
        "properties": "never"
      }
    ],
    "no-unused-expressions": "error",
    "prefer-const": "warn",
    "prefer-arrow-callback": "warn",
    "semi": "warn",
    "curly": ["error", "multi-line"],
    "import/extensions": [
      "error",
      "ignorePackages",
      {
        "js": "never",
        "jsx": "never",
        "ts": "never",
        "tsx": "never"
      }
    ],
    "no-use-before-define": "off",
    "@typescript-eslint/no-use-before-define": ["error"]
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [".js", ".jsx", ".ts", ".tsx"]
      }
    }
  },
  "overrides": [
    {
      "files": ["*.test.ts", "*.test.tsx"],
      "env": {
        "jest/globals": true
      }
    },
    {
      "files": ["*.ts", "*.tsx"],
      "rules": {
        "no-unused-vars": "off", // replaced by @typescript-eslint/no-unused-vars
        "@typescript-eslint/no-unused-vars": [
          "error",
          {
            "argsIgnorePattern": "^_+",
            "varsIgnorePattern": "^_+"
          }
        ],
        "@typescript-eslint/no-floating-promises": "error"
      }
    }
  ]
}
