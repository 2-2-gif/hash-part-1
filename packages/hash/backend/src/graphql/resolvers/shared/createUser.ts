import { genEntityId } from "../../../util";
import { DbUser } from "../../../types/dbTypes";
import {
  MutationCreateUserArgs,
  Resolver,
  Visibility,
} from "../../autoGeneratedTypes";
import { GraphQLContext } from "../../context";

export const createUser: Resolver<
  Promise<DbUser>,
  {},
  GraphQLContext,
  MutationCreateUserArgs
> = async (_, { email, shortname }, { dataSources }) => {
  const id = genEntityId();
  // TODO: should check for uniqueness of email

  const entity = await dataSources.db.createEntity({
    namespaceId: id,
    id,
    createdById: id, // Users "create" themselves
    type: "User",
    properties: { email, shortname },
  });

  const user: DbUser = {
    ...entity,
    type: "User",
    visibility: Visibility.Public, // TODO
  };

  return user;
};
