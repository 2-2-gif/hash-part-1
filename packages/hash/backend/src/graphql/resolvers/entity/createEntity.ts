import { UserInputError } from "apollo-server-express";

import { entities } from "../../../mockData/entities";
import { DbUnknownEntity } from "../../../types/dbTypes";
import {
  MutationCreateEntityArgs,
  Resolver,
  Visibility,
} from "../../autoGeneratedTypes";
import { namespaceIdFromNamespaceName } from "../shared/namespace";

let i = 100;

export const createEntity: Resolver<
  Promise<DbUnknownEntity>,
  {},
  {},
  MutationCreateEntityArgs
> = async (_, { namespace, namespaceId, properties, type }) => {
  if (!namespace && !namespaceId) {
    throw new UserInputError(
      "One of namespace or namespaceId must be provided"
    );
  }
  if (!namespaceId) {
    namespaceId = await namespaceIdFromNamespaceName(namespace!);
  }

  const now = new Date();

  const entity: DbUnknownEntity = {
    id: `entity${i++}`,
    namespaceId,
    properties: properties,
    createdById: "1",
    type,
    updatedAt: now,
    createdAt: now,
    visibility: Visibility.Public,
  };

  entities.push(entity);

  return entity;
};
