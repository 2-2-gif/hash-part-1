import { ApolloError } from "apollo-server-express";

import { QueryEntityArgs, Resolver } from "../../autoGeneratedTypes";
import { entities } from "../../../mockData/entities";
import { DbUnknownEntity } from "../../../types/dbTypes";

export const entity: Resolver<
  Promise<DbUnknownEntity>,
  {},
  {},
  QueryEntityArgs
> = async (_, { id }) => {
  const dbEntity = (await entities.find((entity) => entity.id === id)) as
    | DbUnknownEntity
    | undefined;

  if (!dbEntity) {
    throw new ApolloError(`Entity id ${id} not found`, "NOT_FOUND");
  }

  return dbEntity;
};
