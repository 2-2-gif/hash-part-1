import { ApolloError } from "apollo-server-express";

import { DbUnknownEntity } from "../../../types/dbTypes";
import { MutationUpdateEntityArgs, Resolver, Visibility } from "../../autoGeneratedTypes";
import { GraphQLContext } from "../../context";

export const updateEntity: Resolver<
  Promise<DbUnknownEntity>,
  {},
  GraphQLContext,
  MutationUpdateEntityArgs
> = async (_, { namespaceId, id, properties }, { dataSources }) => {
  const e = await dataSources.db.updateEntity({namespaceId, id, properties});
  if (!e) {
    throw new ApolloError(`Could not find entity with id ${id} in namespace ${namespaceId}`, "NOT_FOUND");
  }

  const entity: DbUnknownEntity = {
    ...e,
    visibility: Visibility.Public, // TODO: should be a param?
  };

  return entity;
};
