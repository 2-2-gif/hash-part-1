import { ApolloError } from "apollo-server-express";

import { DbPage } from "../../../types/dbTypes";
import { MutationUpdatePageArgs, Resolver } from "../../autoGeneratedTypes";
import { entities } from "../../../mockData/entities";

export const updatePage: Resolver<
  Promise<DbPage>,
  {},
  {},
  MutationUpdatePageArgs
> = async (_, { id, properties }) => {
  const page = entities.find(
    (entity) => entity.type === "Page" && entity.id === id
  ) as DbPage;

  if (!page) {
    throw new ApolloError(`Could not find page with id ${id}`, "NOT_FOUND");
  }

  page.updatedAt = new Date();
  if (properties.title) {
    page.properties.title = properties.title;
  }
  if (properties.contents) {
    page.properties.contents = properties.contents;
  }
  if (properties.summary) {
    page.properties.summary = properties.summary;
  }

  return page;
};
