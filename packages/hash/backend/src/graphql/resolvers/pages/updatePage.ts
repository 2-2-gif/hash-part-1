import { ApolloError } from "apollo-server-express";

import { DbPage } from "../../../types/dbTypes";
import { MutationUpdatePageArgs, Resolver } from "../../autoGeneratedTypes";
import { GraphQLContext } from "../../context";

export const updatePage: Resolver<
  Promise<DbPage>,
  {},
  GraphQLContext,
  MutationUpdatePageArgs
> = async (_, { namespaceId, id, properties }, { dataSources }) => {
  const existingEntity = await dataSources.db.getEntity({ namespaceId, id });

  const entity = await dataSources.db.updateEntity({
    namespaceId,
    id,
    properties: {
      ...(existingEntity?.properties ?? {}),
      ...properties,
    },
    type: "Page",
  });

  if (!entity) {
    throw new ApolloError(
      `Could not find page with id ${id} in namesapce ${namespaceId}`,
      "NOT_FOUND"
    );
  }
  return entity as DbPage;
};
