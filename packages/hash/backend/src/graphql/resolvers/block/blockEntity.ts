import { ApolloError } from "apollo-server-express";

import { Resolver } from "../../autoGeneratedTypes";
import { entities } from "../../../mockData/entities";
import { DbBlock, DbUnknownEntity } from "../../../types/dbTypes";

export const blockEntity: Resolver<
  Promise<DbUnknownEntity>,
  DbBlock["properties"]
> = async ({ entityId }) => {
  const dbEntity = (await entities.find((entity) => entity.id === entityId)) as
    | DbUnknownEntity
    | undefined;

  if (!dbEntity) {
    throw new ApolloError(`Entity id ${entityId} not found`, "NOT_FOUND");
  }

  return dbEntity;
};
