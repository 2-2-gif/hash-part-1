import { ApolloError } from "apollo-server-express";

import { Resolver } from "../../autoGeneratedTypes";
import { DbBlock, DbUnknownEntity } from "../../../types/dbTypes";
import { GraphQLContext } from "../../context";

export const blockEntity: Resolver<
  Promise<DbUnknownEntity>,
  DbBlock,
  GraphQLContext,
  {}
> = async ({ namespaceId, id, type }, {}, { dataSources }) => {
  const entity = await dataSources.db.getEntity({ namespaceId, id });
  if (!entity) {
    throw new ApolloError(`Entity id ${id} not found`, "NOT_FOUND");
  }
  if (entity.type !== type) {
    throw new ApolloError(
      `Expected entity ID ${id} to be type "${type}" not "${entity.type}"`
    );
  }

  return entity as DbUnknownEntity;
};
