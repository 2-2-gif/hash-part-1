import { Entity } from "../autoGeneratedTypes";
import { entity } from "./blocks/entity";
import { entityNamespaceName } from "./shared/namespace";
import { page } from "./pages/page";
import { namespacePages } from "./pages/namespacePages";
import { namespaces } from "./namespace/namespaces";
import { createPage } from "./pages/createPage";
import { updatePage } from "./pages/updatePage";
import { DbOrg, DbUser } from "src/types/dbTypes";

const KNOWN_ENTITIES = ["Page", "Text", "User"];

export const resolvers = {
  Query: {
    namespacePages,
    namespaces,
    page,
  },

  Mutation: {
    createPage,
    updatePage,
  },

  Block: {
    entity,
    namespace: entityNamespaceName,
  },

  Entity: {
    __resolveType(entity: Entity) {
      if (KNOWN_ENTITIES.includes(entity.type)) {
        return entity.type;
      }
      return "UnknownEntity";
    },
  },

  Namespace: {
    __resolveType(entity: DbUser | DbOrg) {
      return entity.type;
    },
  },
};
